// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rental.Domain;

namespace Rental.Domain.Migrations
{
    [DbContext(typeof(RentalContext))]
    [Migration("20210411041953_CreateDefinition")]
    partial class CreateDefinition
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Rental.Domain.AircraftEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<char>("State")
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.ToTable("Aircraft", "dbo");
                });

            modelBuilder.Entity("Rental.Domain.PassengerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("IdentificationDocument")
                        .HasColumnType("bigint");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Specialty")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Passenger", "dbo");
                });

            modelBuilder.Entity("Rental.Domain.PermissionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name", "DisplayName")
                        .IsUnique();

                    b.ToTable("Permission", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c5e3a53f-ce37-4512-91f3-a6d823dabe06"),
                            DisplayName = "Roles",
                            Name = "CanRoles",
                            Order = 1
                        },
                        new
                        {
                            Id = new Guid("b8c5caa1-4a44-4783-af7e-eb29617a5a70"),
                            DisplayName = "Usuarios",
                            Name = "CanUsers",
                            Order = 2
                        },
                        new
                        {
                            Id = new Guid("186df72b-0328-4539-8015-2965eb13ccec"),
                            DisplayName = "Alquileres",
                            Name = "CanRentals",
                            Order = 3
                        },
                        new
                        {
                            Id = new Guid("44eb6612-536e-46d2-96ef-a752691f2296"),
                            DisplayName = "Aeronaves",
                            Name = "CanAircrafts",
                            Order = 4
                        },
                        new
                        {
                            Id = new Guid("352dec26-951c-4236-afb5-b059f014e819"),
                            DisplayName = "Pasajeros",
                            Name = "CanPassengers",
                            Order = 5
                        });
                });

            modelBuilder.Entity("Rental.Domain.RentalEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("AircraftId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<Guid>("PassengerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId");

                    b.HasIndex("PassengerId");

                    b.ToTable("Rental", "dbo");
                });

            modelBuilder.Entity("Rental.Domain.RoleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "DisplayName")
                        .IsUnique();

                    b.ToTable("Role", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6bbe4b56-3f81-4957-a8f1-33c9112db4a2"),
                            DisplayName = "Administrador",
                            Name = "AdminUser"
                        },
                        new
                        {
                            Id = new Guid("22b20e06-f147-41d6-8333-7c921242ad27"),
                            DisplayName = "Usuario Común",
                            Name = "CommonUser"
                        },
                        new
                        {
                            Id = new Guid("aedb18fc-7b6c-488c-80bf-8bc2b36febe3"),
                            DisplayName = "Pasajero",
                            Name = "PassengerUser"
                        },
                        new
                        {
                            Id = new Guid("da9fbf03-d19b-4586-a28b-7b8deaa7a5b6"),
                            DisplayName = "Piloto",
                            Name = "PilotUser"
                        });
                });

            modelBuilder.Entity("Rental.Domain.RolePermissionEntity", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermission", "dbo");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("6bbe4b56-3f81-4957-a8f1-33c9112db4a2"),
                            PermissionId = new Guid("c5e3a53f-ce37-4512-91f3-a6d823dabe06")
                        },
                        new
                        {
                            RoleId = new Guid("6bbe4b56-3f81-4957-a8f1-33c9112db4a2"),
                            PermissionId = new Guid("b8c5caa1-4a44-4783-af7e-eb29617a5a70")
                        },
                        new
                        {
                            RoleId = new Guid("6bbe4b56-3f81-4957-a8f1-33c9112db4a2"),
                            PermissionId = new Guid("186df72b-0328-4539-8015-2965eb13ccec")
                        },
                        new
                        {
                            RoleId = new Guid("6bbe4b56-3f81-4957-a8f1-33c9112db4a2"),
                            PermissionId = new Guid("44eb6612-536e-46d2-96ef-a752691f2296")
                        },
                        new
                        {
                            RoleId = new Guid("6bbe4b56-3f81-4957-a8f1-33c9112db4a2"),
                            PermissionId = new Guid("352dec26-951c-4236-afb5-b059f014e819")
                        },
                        new
                        {
                            RoleId = new Guid("22b20e06-f147-41d6-8333-7c921242ad27"),
                            PermissionId = new Guid("186df72b-0328-4539-8015-2965eb13ccec")
                        },
                        new
                        {
                            RoleId = new Guid("22b20e06-f147-41d6-8333-7c921242ad27"),
                            PermissionId = new Guid("352dec26-951c-4236-afb5-b059f014e819")
                        },
                        new
                        {
                            RoleId = new Guid("aedb18fc-7b6c-488c-80bf-8bc2b36febe3"),
                            PermissionId = new Guid("44eb6612-536e-46d2-96ef-a752691f2296")
                        },
                        new
                        {
                            RoleId = new Guid("aedb18fc-7b6c-488c-80bf-8bc2b36febe3"),
                            PermissionId = new Guid("352dec26-951c-4236-afb5-b059f014e819")
                        },
                        new
                        {
                            RoleId = new Guid("da9fbf03-d19b-4586-a28b-7b8deaa7a5b6"),
                            PermissionId = new Guid("186df72b-0328-4539-8015-2965eb13ccec")
                        },
                        new
                        {
                            RoleId = new Guid("da9fbf03-d19b-4586-a28b-7b8deaa7a5b6"),
                            PermissionId = new Guid("44eb6612-536e-46d2-96ef-a752691f2296")
                        },
                        new
                        {
                            RoleId = new Guid("da9fbf03-d19b-4586-a28b-7b8deaa7a5b6"),
                            PermissionId = new Guid("352dec26-951c-4236-afb5-b059f014e819")
                        });
                });

            modelBuilder.Entity("Rental.Domain.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("IdentificationDocument")
                        .HasColumnType("bigint");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("IdentificationDocument", "Username", "Email")
                        .IsUnique();

                    b.ToTable("User", "dbo");
                });

            modelBuilder.Entity("Rental.Domain.RentalEntity", b =>
                {
                    b.HasOne("Rental.Domain.AircraftEntity", "Aircraft")
                        .WithMany()
                        .HasForeignKey("AircraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rental.Domain.PassengerEntity", "Passenger")
                        .WithMany()
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Aircraft");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("Rental.Domain.RolePermissionEntity", b =>
                {
                    b.HasOne("Rental.Domain.PermissionEntity", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rental.Domain.RoleEntity", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Rental.Domain.UserEntity", b =>
                {
                    b.HasOne("Rental.Domain.RoleEntity", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Rental.Domain.RoleEntity", b =>
                {
                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
